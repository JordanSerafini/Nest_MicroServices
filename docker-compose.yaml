services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - nestjs_network


  item_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/item_service:/app
      - ./Backend/item_service/logs:/var/log/Logs_ItemService
      # - /app/node_modules
    ports:
      - "3001:3001"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  customer_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/customer_service:/app
      # - ./Backend/customer_service/logs:/var/log/Logs_CustomerService
      # - ./Backend/customer_service/src/validated:/app/validated
      # - ./Backend/customer_service/src/error:/app/error
      # - ./Backend/customer_service/src/address:/app/address
      # - /app/node_modules
    ports:
      - "3002:3002"
    networks:
      - nestjs_network
    # depends_on:
    #   - redis
      # - item_service
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
      - REDIS_URL=redis://redis:6379
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  authentification_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/authentification_service:/app
      # - ./Backend/authentification_service/logs:/var/log/Logs_AuthService
      # - /app/node_modules
    ports:
      - "3003:3003"
    networks:
      - nestjs_network
    # depends_on:
    #   - customer_service
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  stock_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/stock_service:/app
      # - ./Backend/stock_service/logs:/var/log/Logs_StockService
      # - /app/node_modules
    ports:
      - "3004:3004"
    networks:
      - nestjs_network
    # depends_on:
    #   - redis
    #   - authentification_service
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
      - REDIS_URL=redis://redis:6379
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  chantier_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/chantier_service:/app
      # - ./Backend/chantier_service/logs:/var/log/Logs_ChantierService
      # - /app/node_modules
    ports:
      - "3006:3006"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
    # depends_on:
    #   - stock_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  colleague_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/colleague_service:/app
      # - ./Backend/colleague_service/logs:/var/log/Logs_ColleagueService
      # - /app/node_modules
    ports:
      - "3007:3007"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
    # depends_on:
    #   - chantier_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  deal_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/deal_service:/app
      # - ./Backend/deal_service/logs:/var/log/Logs_DealService
      # - /app/node_modules
    ports:
      - "3008:3008"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
      - REDIS_URL=redis://redis:6379

    # depends_on:
    #   - colleague_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  incident_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/incident_service:/app
      # - ./Backend/incident_service/logs:/var/log/Logs_IncidentService
      # - /app/node_modules
    ports:
      - "3009:3009"
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
    networks:
      - nestjs_network
    # depends_on:
    #   - deal_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  maintenance_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/maintenance_service:/app
      # - ./Backend/maintenance_service/logs:/var/log/Logs_MaintenanceService
      # - /app/node_modules
    ports:
      - "3010:3010"
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
      - REDIS_URL=redis://redis:6379

    networks:
      - nestjs_network
    # depends_on:
    #   - incident_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  purchase_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/purchase_service:/app
      # - ./Backend/purchase_service/logs:/var/log/Logs_PurchaseService
      # - /app/node_modules
    ports:
      - "3011:3011"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
      - REDIS_URL=redis://redis:6379

    # depends_on:
    #   - maintenance_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  sale_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/sale_service:/app
      # - ./Backend/sale_service/logs:/var/log/Logs_SaleService
      # - /app/node_modules
    ports:
      - "3012:3012"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
      - REDIS_URL=redis://redis:6379

    # depends_on:
    #   - purchase_service
    #   - redis
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  schedule_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/schedule_service:/app
      # - ./Backend/schedule_service/logs:/var/log/Logs_ScheduleService
      # - /app/node_modules
    ports:
      - "3013:3013"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
    # depends_on:
    #   - sale_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"

  supplier_service:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/supplier_service:/app
      # - ./Backend/supplier_service/logs:/var/log/Logs_SupplierService
      # - /app/node_modules
    ports:
      - "3014:3014"
    networks:
      - nestjs_network
    environment:
      # - CHOKIDAR_USEPOLLING=true
      #- PG_HOST=172.17.0.1
      - PG_HOST=192.168.1.10
      # PG_HOST=192.168.20.240/docker.host.internal
      - PG_PORT=5432
      - PG_USER=jordans
      - PG_PASSWORD=slitest
      - PG_DATABASE=SLI
    # depends_on:
    #   - schedule_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"


  api_gateway:
    image: node:22-alpine
    working_dir: /app
    volumes:
      - ./Backend/api_gateway:/app
      # - ./Backend/api_gateway/logs:/var/log/Logs_ApiGateway
      # - /app/node_modules
    ports:
      - "3000:3000"
    networks:
      - nestjs_network
    # environment:
    #   - CHOKIDAR_USEPOLLING=true
    # depends_on:
    #   - customer_service
    #   - item_service
    #   - authentification_service
    #   - stock_service
    #   - chantier_service
    #   - colleague_service
    #   - deal_service
    #   - incident_service
    #   - maintenance_service
    #   - purchase_service
    #   - sale_service
    #   - schedule_service
    #   - supplier_service
    command: "sh -c 'npm install && npx nodemon --watch src --ext ts --exec \"ts-node\" src/main.ts'"



    

networks:
  nestjs_network:
    driver: bridge

  # postgres:
  #   image: postgres:16
  #   environment:
  #     POSTGRES_USER: jordans
  #     POSTGRES_PASSWORD: slitest
  #     POSTGRES_DB: SLI
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - "C:/Program Files/PostgreSQL/16/data:/var/lib/postgresql/data"
  #   networks:
  #     - nestjs_network


  # mobile_service:
  #   build:
  #     context: ./Frontend/Mobile
  #     dockerfile: Dockerfile
  #   ports:
  #     - "19000:19000"
  #     - "19001:19001"
  #     - "8081:8081"
  #   volumes:
  #     - ./Frontend/Mobile:/app
  #   environment:
  #     # - CHOKIDAR_USEPOLLING=true
  #   networks:
  #     - nestjs_network
  #   stdin_open: true
  #   tty: true