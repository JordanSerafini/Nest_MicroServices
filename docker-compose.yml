services:
  item_service:
    build:
      context: ./Backend/item_service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/item_service/logs:/var/log/Logs_ItemService

  customer_service:
    build:
      context: ./Backend/customer_service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    networks:
      - nestjs_network
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./Backend/customer_service/logs:/var/log/Logs_CustomerService
      - ./Backend/customer_service/src/validated/:/app/validated/
      - ./Backend/customer_service/src/error/:/app/error/
      - ./Backend/customer_service/src/address:/app/address

  authentification_service:
    build:
      context: ./Backend/authentification_service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/authentification_service/logs:/var/log/Logs_AuthService

  stock_service:
    build:
      context: ./Backend/stock_service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    networks:
      - nestjs_network
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./Backend/stock_service/logs:/var/log/Logs_StockService

  chantier_service:
    build:
      context: ./Backend/chantier_service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/chantier_service/logs:/var/log/Logs_ChantierService

  colleague_service:
    build:
      context: ./Backend/colleague_service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/colleague_service/logs:/var/log/Logs_ColleagueService

  deal_service:
    build:
      context: ./Backend/deal_service
      dockerfile: Dockerfile
    ports:
      - "3008:3008"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/deal_service/logs:/var/log/Logs_DealService

  incident_service:
    build:
      context: ./Backend/incident_service
      dockerfile: Dockerfile
    ports:
      - "3009:3009"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/incident_service/logs:/var/log/Logs_IncidentService
    
  maintenance_service:
    build:
      context: ./Backend/maintenance_service
      dockerfile: Dockerfile
    ports:
      - "3010:3010"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/maintenance_service/logs:/var/log/Logs_MaintenanceService

  purchase_service:
    build:
      context: ./Backend/purchase_service
      dockerfile: Dockerfile
    ports:
      - "3011:3011"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/purchase_service/logs:/var/log/Logs_PurchaseService

  sale_service:
    build:
      context: ./Backend/sale_service
      dockerfile: Dockerfile
    ports:
      - "3012:3012"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/sale_service/logs:/var/log/Logs_SaleService

  schedule_service:
    build:
      context: ./Backend/schedule_service
      dockerfile: Dockerfile
    ports:
      - "3013:3013"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/schedule_service/logs:/var/log/Logs_ScheduleService

  supplier_service:
    build:
      context: ./Backend/supplier_service
      dockerfile: Dockerfile
    ports:
      - "3014:3014"
    networks:
      - nestjs_network
    volumes:
      - ./Backend/supplier_service/logs:/var/log/Logs_SupplierService

  api_gateway:
    build:
      context: ./Backend/api_gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - nestjs_network
    depends_on:
      - customer_service
      - item_service
      - authentification_service
      - stock_service
      - chantier_service
      - colleague_service
      - deal_service
      - incident_service
      - maintenance_service
      - purchase_service
      - sale_service
      - schedule_service
      - supplier_service
    volumes:
      - ./Backend/api_gateway/logs:/var/log/Logs_ApiGateway

  # mobile_service:
  #   build:
  #     context: ./Frontend/Mobile
  #     dockerfile: Dockerfile
  #   ports:
  #     - "19000:19000"
  #     - "19001:19001"
  #     - "8081:8081"
  #   volumes:
  #     - ./Frontend/Mobile:/app
  #   environment:
  #     - CHOKIDAR_USEPOLLING=true
  #   networks:
  #     - nestjs_network
  #   stdin_open: true
  #   tty: true



  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - nestjs_network

networks:
  nestjs_network:
    driver: bridge
